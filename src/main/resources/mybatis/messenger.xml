<?xml version="1.0" encoding="UTF-8" ?> 
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.messenger.MessengerMapper">
	<!-- 메세지 리스트 가져오기 -->
	<select id="messageList" parameterType="com.project.messenger.MessengerDTO" resultType="com.project.messenger.MessengerDTO">
	    select no, room, send_id, recv_id, send_time, read_time, content, read_chk
	    from zagook_message
	    where no in (select max(no) from zagook_message group by room) and (send_id = #{id} or recv_id=#{id})
	    order by no desc
	</select>
	
	<!-- 메세지 list에서 상대방 profile 가져오기 -->
	<select id="get_other_profile" parameterType="com.project.messenger.MessengerDTO" resultType="String">
	    select fname from zagook_member
	    <choose>
	        <when test="send_id == id">
	            where id = #{recv_id}
	        </when>
	        <otherwise>
	            where id = #{send_id}
	        </otherwise>
	    </choose>
	</select>
	
	<!-- 안읽은 메세지 갯수 가져오기 -->
	<select id="count_unread" parameterType="com.project.messenger.MessengerDTO" resultType="Int">
	    select count(no) from zagook_message 
	    where recv_id=#{id} and read_chk=0 and room=#{room}
	</select>
	
	<!-- 메세지 내용 가져오기 -->
	<select id="roomContentList" parameterType="com.project.messenger.MessengerDTO" resultType="com.project.messenger.MessengerDTO">
	    select m.no, m.room, m.send_id, m.recv_id, m.send_time, m.read_time, m.content, m.read_chk, u.fname
	    from zagook_message m left outer join zagook_member u
	    on m.send_id = u.id
	    <choose>
	        <when test="room != 0">
	            where room=#{room}
	        </when>
	        <otherwise>
	            where (recv_id = #{recv_id} and send_id = #{id}) or (send_id = #{recv_id} and recv_id = #{id})
	        </otherwise>
	    </choose>
	
	</select>
	
	<!-- 메세지 읽음 처리 -->
	<update id="message_read_chk" parameterType="com.project.messenger.MessengerDTO">
	    update zagook_message set read_chk=1
	    <choose>
	        <when test="room != 0">
	            where room=#{room} and read_chk=0 and recv_id=#{id}
	        </when>
	        <otherwise>
	            where send_id=#{recv_id} and read_chk=0 and recv_id=#{id}
	        </otherwise>
	    </choose>
	
	</update>
	
	<!-- 메세지리스트에서 메세지 보내기 -->
	<insert id="messageSendInlist" parameterType="com.project.messenger.MessengerDTO">
	    <choose>
	        <when test="room != 0">
	            insert into message values(0, #{room}, #{send_id}, #{recv_id}, now(), now(), #{content}, 0)
	        </when>
	        <otherwise>
	            insert into message values(0, #{room}, #{send_id}, #{recv_id}, now(), now(), #{content}, 0)
	        </otherwise>
	    </choose>
	</insert>
	
	<!-- room 번호 최댓값 구하기 -->
	<select id="max_room"  parameterType="com.project.messenger.MessengerDTO" resultType="Int">
	    select max(room) from zagook_message
	</select>
	
	<!-- 메세지 이력이 있는지 검색 -->
	<select id="exist_chat" parameterType="com.project.messenger.MessengerDTO" resultType="Int">
	    select count(no) from zagook_message 
	    where (recv_id = #{recv_id} and send_id=#{send_id}) or (send_id = #{recv_id} and recv_id=#{send_id})
	</select>
	
	<!-- 기존 메세지 내역의 room 번호를 가져옴 -->
	<select id="select_room"  parameterType="com.project.messenger.MessengerDTO" resultType="String">
	    select room from zagook_message 
	    where (recv_id = #{recv_id} and send_id=#{send_id}) or (send_id = #{recv_id} and recv_id=#{send_id})
	    limit 0,1
	</select>
</mapper>